version: 0.2

phases:
  install:
    commands:
      - apt-get update
      - apt-get install unzip -y
      - apt-get install python-dev -y
      - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
      - unzip awscli-bundle.zip
      - ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
      - aws --version
      - curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
      - sudo apt-get install -y nodejs
      - npm install -g mocha
  pre_build:
    commands:
      - echo Installing source NPM dependencies...
      - npm install
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region us-east-2 --no-include-email)
      - REPOSITORY_URI=426318416515.dkr.ecr.us-east-2.amazonaws.com/boilerplate-docker
      - IMAGE_NAME=boilerplate-api
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - echo "$CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7"
  build:
    commands:
      - npm run test
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on $(date)
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"nginx","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
      - imagedefinitions.json
